[{"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/index.js":"1","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/App.js":"2","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/ScrollToTop.js":"3","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/HomePage.js":"4","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/NavBar.js":"5","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Login.js":"6","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/ContactUs.js":"7","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/About.js":"8","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Partners.js":"9","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Footer.js":"10","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Redux/actions.js":"11","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/PostGallery.js":"12","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/UserProfile.js":"13","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/BreakupQuizContainer.js":"14","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostPage.js":"15","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostDisplay.js":"16","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Quiz.js":"17","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/FavoritesContainer.js":"18","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Comment.js":"19","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostCard.js":"20","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/ResultCard.js":"21","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/FavoriteCard.js":"22","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/QuestionCard.js":"23"},{"size":2750,"mtime":1614198316042,"results":"24","hashOfConfig":"25"},{"size":2175,"mtime":1615404381806,"results":"26","hashOfConfig":"25"},{"size":358,"mtime":1614198316038,"results":"27","hashOfConfig":"25"},{"size":3616,"mtime":1614812148686,"results":"28","hashOfConfig":"25"},{"size":1723,"mtime":1615323507923,"results":"29","hashOfConfig":"25"},{"size":2636,"mtime":1614813934133,"results":"30","hashOfConfig":"25"},{"size":163,"mtime":1614198316029,"results":"31","hashOfConfig":"25"},{"size":153,"mtime":1614198316025,"results":"32","hashOfConfig":"25"},{"size":166,"mtime":1614198316035,"results":"33","hashOfConfig":"25"},{"size":3314,"mtime":1614814924708,"results":"34","hashOfConfig":"25"},{"size":4573,"mtime":1614368980225,"results":"35","hashOfConfig":"25"},{"size":1198,"mtime":1615406215896,"results":"36","hashOfConfig":"25"},{"size":8332,"mtime":1614713833688,"results":"37","hashOfConfig":"25"},{"size":3833,"mtime":1614812471394,"results":"38","hashOfConfig":"25"},{"size":2054,"mtime":1610739902562,"results":"39","hashOfConfig":"25"},{"size":2717,"mtime":1615404782347,"results":"40","hashOfConfig":"25"},{"size":3655,"mtime":1614204031317,"results":"41","hashOfConfig":"25"},{"size":963,"mtime":1614198316040,"results":"42","hashOfConfig":"25"},{"size":1492,"mtime":1614198316028,"results":"43","hashOfConfig":"25"},{"size":3625,"mtime":1615407519842,"results":"44","hashOfConfig":"25"},{"size":4351,"mtime":1614713833682,"results":"45","hashOfConfig":"25"},{"size":2330,"mtime":1614713833680,"results":"46","hashOfConfig":"25"},{"size":2951,"mtime":1614713833681,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1wlteby",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/index.js",[],["96","97"],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/App.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/ScrollToTop.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/HomePage.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/NavBar.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Login.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/ContactUs.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/About.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Partners.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Footer.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Redux/actions.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/PostGallery.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/UserProfile.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/BreakupQuizContainer.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostPage.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostDisplay.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Quiz.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/FavoritesContainer.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Comment.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostCard.js",["98"],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/ResultCard.js",["99","100"],"import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n  \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n  \n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      position: 'absolute',\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\n\nconst ResultCard = (props) => {\n    const classes = useStyles();\n\n    const [modalStyle] = useState(getModalStyle);\n    const [open, setOpen] = useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n      };\n    \n      const handleClose = () => {\n        setOpen(false);\n      };\n\n    const [area, setArea] = useState('');\n    const [middle, setMiddle] = useState('');\n    const [end, setEnd] = useState('');\n    const [message, setMessage] = useState(props.result);\n    const [sent, setSent] = useState('');\n\n\n    \n    const sendMessage = (event) => {\n        event.preventDefault();\n\n        let smsObj = {\n            user_number: '1' + area + middle + end,\n            message: message\n        }\n       \n        fetch('http://localhost:3000/sms_messages/', {\n            method:'POST',\n            headers: {\n                'content-type': 'application/json',\n                accepts: \"application/json\"\n            },\n            body: JSON.stringify(smsObj)\n        })\n        .then(resp => resp.json())\n        .then(result => console.log(result))\n\n    }\n\n    const changeHandle = (event) => {\n        if (event.target.name === \"area\") {\n            setArea(event.target.value);\n        } else if (event.target.name === \"middle\") {\n            setMiddle(event.target.value);\n        } else if (event.target.name === \"end\") {\n            setEnd(event.target.value);\n        } else if (event.target.name === \"message\") {\n            setMessage(event.target.value);\n        }\n    }\n\n    const phoneNumber = (\n            <form style={modalStyle} className={classes.paper} onSubmit={sendMessage}>\n                <label>Please enter the phone number that you would like this message sent to: </label>\n                <span>(</span>\n                <input name=\"area\" type=\"text\" onChange={changeHandle} max=\"3\" min=\"3\" />\n                <span>)</span>\n                <input name=\"middle\" type=\"text\" onChange={changeHandle} max=\"3\" min=\"3\" />\n                <span> - </span>\n                <input name=\"end\" type=\"text\" onChange={changeHandle} max=\"3\" min=\"3\" />\n                <input name=\"message\" type=\"textarea\" onChange={changeHandle} value={message} />\n                <button>Submit</button>\n            </form>   \n        )\n\n    return (\n        <>\n            <h3>Done! Quiz Complete</h3>\n            <Message>{props.result}</Message>\n            <button onClick={props.resetQuiz}>Try Again</button> \n            <button type=\"button\" onClick={handleOpen}>Send Text!</button> \n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n            {phoneNumber}\n            </Modal>       \n        </>\n    )\n}\n\nconst msp = state => {\n    return {\n        messages: state.messages\n    }\n}\n\nexport default connect(msp, null)(ResultCard);\n\nconst Message = styled.div`\nborder-radius: 20px;\npadding: 8px 15px;\nmargin-top: 5px;\nmargin-bottom: 5px;\ndisplay: inline-block;\ncolor: white;\nmargin-left: 25%;\nbackground: #bfa0e2;\nbackground-attachment: fixed;\nposition: relative;\n\n    &:hover {\n        cursor: pointer;\n    }\n\nmargin-bottom: 30px;\n&:before{\n    content: \"\";\n    position: absolute;\n    z-index: 0;\n    bottom: 0;\n    right: -8px;\n    height: 20px;\n    width: 20px;\n    background: #bfa0e2;\n    background-attachment: fixed;\n    border-bottom-left-radius: 15px;\n  }\n  &:after{\n    content: \"\";\n    position: absolute;\n    z-index: 1;\n    bottom: 0;\n    right: -10px;\n    width: 10px;\n    height: 20px;\n    background: white;\n    border-bottom-left-radius: 10px;\n  }\n`","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/FavoriteCard.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/QuestionCard.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":2,"column":9,"nodeType":"107","messageId":"108","endLine":2,"endColumn":16},{"ruleId":"105","severity":1,"message":"109","line":47,"column":12,"nodeType":"107","messageId":"108","endLine":47,"endColumn":16},{"ruleId":"105","severity":1,"message":"110","line":47,"column":18,"nodeType":"107","messageId":"108","endLine":47,"endColumn":25},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'sent' is assigned a value but never used.","'setSent' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]