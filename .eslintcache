[{"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/index.js":"1","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/App.js":"2","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/NavBar.js":"3","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Quiz.js":"4","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/HomePage.js":"5","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Login.js":"6","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Redux/actions.js":"7","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/UserProfile.js":"8","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/PostGallery.js":"9","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/FavoritesContainer.js":"10","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostPage.js":"11","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostDisplay.js":"12","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/FavoriteCard.js":"13","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Comment.js":"14","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostCard.js":"15","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Footer.js":"16"},{"size":2318,"mtime":1610739902570,"results":"17","hashOfConfig":"18"},{"size":1643,"mtime":1611184305289,"results":"19","hashOfConfig":"18"},{"size":2704,"mtime":1611264206893,"results":"20","hashOfConfig":"18"},{"size":147,"mtime":1610038964000,"results":"21","hashOfConfig":"18"},{"size":3366,"mtime":1610742260135,"results":"22","hashOfConfig":"18"},{"size":1800,"mtime":1610574893000,"results":"23","hashOfConfig":"18"},{"size":3826,"mtime":1610739902568,"results":"24","hashOfConfig":"18"},{"size":686,"mtime":1610576614000,"results":"25","hashOfConfig":"18"},{"size":959,"mtime":1610035374000,"results":"26","hashOfConfig":"18"},{"size":701,"mtime":1610576925000,"results":"27","hashOfConfig":"18"},{"size":2054,"mtime":1610739902562,"results":"28","hashOfConfig":"18"},{"size":2440,"mtime":1610739902560,"results":"29","hashOfConfig":"18"},{"size":240,"mtime":1610576925000,"results":"30","hashOfConfig":"18"},{"size":1502,"mtime":1610739902559,"results":"31","hashOfConfig":"18"},{"size":2376,"mtime":1611525011855,"results":"32","hashOfConfig":"18"},{"size":1084,"mtime":1611264128733,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1wlteby",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/index.js",[],["72","73"],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/App.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/NavBar.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Quiz.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/HomePage.js",["74"],"import React, {useState} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport styled from 'styled-components';\nimport logo from '../asset/navbar_logo.png';\n\nconst HomePage = () => {\n    \n    const [redirect, setRedirect] = useState(false)\n\n    const clickHandler = () => {\n        setRedirect(!redirect)\n    }\n    \n    return(\n        <>\n            {redirect ? <Redirect to='/quiz'/> : null}\n            <Container>\n                <GreetingContainer>\n                    <Header>It's time to breakup with ghosting.</Header>\n                    <Button onClick={clickHandler}>\n                       Get Space\n                    </Button>\n                </GreetingContainer>\n                <Image alt=\"ghosting text message\" src='https://uploads-ssl.webflow.com/5e6437bd68556a7f88367dcc/5ec296209f679a49aefc57af_Image-32.gif'/>\n            </Container>\n            <AboutContainer>\n                <BackgroundImage alt='Background About Image' src='https://uploads-ssl.webflow.com/5e6437bd68556a7f88367dcc/5f356e3c22dcee2874868e0d_background.jpg'/>\n                <TextContainer>\n                    <AboutHeader>\n                        Hi, we're BreakUp Space: <br/> The Antithesis of Ghosting.\n                    </AboutHeader>\n                    <MiddleText>\n                        With templated “breakup\" texts that make it that <br/> much easier to breakup with ghosting.\n                    </MiddleText>\n                    <SaveHeartText>\n                        Just copy and paste. Save a heart, send a text.\n                    </SaveHeartText>  \n                </TextContainer>\n            </AboutContainer>\n          </>  \n\n    )\n}\n\nexport default HomePage;\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    height: 80vh;\n    background-color: #EAEAEA;\n    padding-bottom: 100px;\n`\n\nconst GreetingContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-right: 25px;\n    width: 35vw;\n`\n\nconst Header = styled.h1`\n    color: #2a2a2a;\n    font-size: 40px;\n`\n\nconst Image = styled.img`\n    height: 80vh;\n`\nconst Button = styled.button`\n    width: 12vw;\n    border-radius: 12px;\n    border: #bfa0e2;\n    font-weight: 600;\n    color: #2a2a2a;\n    background-color: #bfa0e2;\n    font-size: 14px;\n    margin-top: 20px;\n    padding: 15px 36px;\n    &:hover {\n        cursor: pointer;\n    }\n`\nconst AboutContainer = styled.div`\n    display: flex;\n    height: 100vh;\n    flex-direction: column;\n    justify-content: center;\n    align-content: center;\n`\n\nconst BackgroundImage = styled.img`\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    filter: brightness(30%);\n`\nconst AboutHeader = styled.h1`\n    color: #2a2a2a;\n    color: #fff;\n`\n\nconst MiddleText = styled.h1`\n    color: #2a2a2a;\n    color: #fff;\n`\n\nconst SaveHeartText = styled.h1`\n    color: #2a2a2a;\n    color: #78FF7D;\n`\n\nconst TextContainer = styled.div`\n    display: grid;\n    place-items: center;\n    grid-template-rows: auto auto auto auto;\n    grid-row-gap: 20px;\n    position: absolute;\n    align-self: center;\n    text-align: center;\n    z-index: 1;\n    font-size: 14px;\n`\n\n    // flex-direction: column;\n    // flex-wrap: wrap;\n    // align-items: center;\n    // align-self: center;\n    // z-index: 1;\n    // position: absolute;\n    // font-size: 16px;","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Login.js",["75","76"],"import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {loginUser} from '../Redux/actions';\nimport {Redirect} from 'react-router-dom';\n\n    const Login = (props) => {\n        const [username, setUsername] = useState('');\n        const [password, setPassword] = useState('');\n\n        const changeHandle = (event) => {\n            if (event.target.name === \"username\") {\n                setUsername(event.target.value);\n            } else if (event.target.name === \"password\") {\n                setPassword(event.target.value);\n            }\n        }\n        \n        const handleSubmit = (event) => {\n            event.preventDefault();\n            // let foundUser = props.users.find(user => user.username === username && user.password === password)\n            let foundUser = props.users[1];\n            if (foundUser) {\n                props.setUser(foundUser);\n            } else {\n             return alert('Incorrect Username or Password');\n            }\n        }\n\n        return (\n            <div>\n                {props.user ? <Redirect to='/'/>: null}\n                <h1>Log-In</h1>\n                <form onSubmit={handleSubmit} >\n                    <input type='text' name='username' placeholder='Username' onChange={changeHandle} />\n                    <br/>\n                    <input type='password' name='password' placeholder='Password' onChange={changeHandle}/>\n                    <button>Submit</button>\n                </form>\n            </div>\n        )\n    }\n\n    const msp = state => {\n        return {\n            users: state.users,\n            user: state.user\n        }\n    }\n\n    const mdp = dispatch => {\n        return {\n           setUser: (user) => dispatch(loginUser(user))\n        }\n    }\n\n\nexport default connect (msp, mdp)(Login);","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Redux/actions.js",["77","78","79"],"const POSTS_URL = 'http://localhost:3000/posts/';\nconst BREAKUPMESSAGES_URL = 'http://localhost:3000/breakup_messages/';\nconst USERS_URL = 'http://localhost:3000/users/';\nconst FAVORITES_URL = 'http://localhost:3000/favorites/';\nconst COMMENTS_URL = 'http://localhost:3000/comments/';\n\nexport const fetchFavorites = () => {\n    return function (dispatch) {\n        fetch(FAVORITES_URL)\n        .then(resp => resp.json())\n        .then(favorites => dispatch({type: \"GET_FAVORITES\", payload: favorites}))\n    }\n}\n\nexport const getPosts = () => {\n    return function (dispatch) {\n        fetch(POSTS_URL)\n        .then(resp => resp.json())\n        .then(posts => dispatch({type: \"GET_POSTS\", payload: posts}))\n    }\n};\n\nexport const savePost = (postObj) => {\n    return function (dispatch) {\n        fetch(POSTS_URL, {\n            method:'POST',\n            headers: {\n                'content-type': 'application/json',\n                accepts: \"application/json\"\n            },\n            body: JSON.stringify(postObj)\n        })\n        .then(resp => resp.json())\n        .then(newPost => dispatch({type: \"NEW_POST\", payload: newPost}))\n    }\n}\n\nexport const deletePost = (postId) => {\n    return function(dispatch) {\n        fetch(POSTS_URL + postId, {\n            method: 'DELETE'\n        })\n        .then(resp => resp.json())\n        .then(deletedPost => dispatch({type: \"DELETE_POST\", payload: deletedPost}))\n    }\n}\n\nexport const updateVote = (upVote, postId) => {\n    return function (dispatch) {\n        fetch(POSTS_URL + postId, {\n            method: 'PATCH',\n            headers: {\n                'content-type': 'application/json',\n                accepts: 'application/json'\n            },\n            body: JSON.stringify(upVote)\n        })\n        .then(resp => resp.json())\n        .then(updatedPost => dispatch({type: \"UPDATED_POST\", payload: updatedPost}))\n    }\n}\n\nexport const getBreakUpMessages = () => {\n    return function (dispatch) {\n        fetch(BREAKUPMESSAGES_URL)\n        .then(resp => resp.json())\n        .then(messages => dispatch({type: \"GET_MESSAGES\", payload: messages}))\n    }\n};\n\nexport const fetchUsers = () => {\n    return function(dispatch) {\n        fetch(USERS_URL)\n        .then(resp => resp.json())\n        .then(users => dispatch({type: \"FETCH_USERS\", payload: users}))\n    }\n};\n\nexport const loginUser = user => ({type: \"SET_USER\", payload: user});\n\nexport const getComments = () => {\n    return function (dispatch) {\n        fetch(COMMENTS_URL)\n        .then(resp => resp.json())\n        .then(comments => dispatch({type: \"GET_COMMENTS\", payload: comments}))\n    }\n}\n\nexport const saveComment = (commentObj) => {\n    return function(dispatch) {\n        fetch(COMMENTS_URL, {\n            method: \"POST\",\n            headers: {\n                'content-type': 'application/json',\n                'accepts': 'application/json'\n            }, \n            body: JSON.stringify(commentObj)\n        }) .then(resp => resp.json())\n        .then(comment => dispatch({type: \"NEW_COMMENT\", payload: comment}))\n    }\n}\n\nexport const updateCommentVote = (upVoteObj, commentId) => {\n    return function(dispatch) {\n        fetch(COMMENTS_URL + commentId, {\n            method: \"PATCH\",\n            headers: {\n                'content-type': 'application/json',\n                'accepts': 'application/json'\n            },\n            body: JSON.stringify(upVoteObj)\n        }) .then(resp => resp.json())\n        .then(updatedComment => dispatch({type: \"UPDATE_COMMENT\", payload: updatedComment}))\n    }\n}\n\nexport const deleteComment = (commentId) => {\n    return function(dispatch) {\n        fetch(COMMENTS_URL + commentId, {\n            method: 'DELETE'\n        }) .then(resp => resp.json())\n        .then(deletedComment => dispatch({type:\"DELETE_COMMENT\", payload: deletedComment}))\n    }\n}","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/UserProfile.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/PostGallery.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/FavoritesContainer.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostPage.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostDisplay.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/FavoriteCard.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Comment.js",["80","81"],"import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {updateCommentVote, deleteComment} from '../Redux/actions.js'\n\nconst Comment = props => {\n    \n    const clickHandle = event => {\n        if (event.target.name === 'up') {\n            let upVotes = {\n                up_votes: props.comment.up_votes + 1\n            }\n            props.upVoteHandle(upVotes, props.comment.id)\n        } else if (event.target.name === 'down') {\n            let upVotes = {\n                up_votes: props.comment.up_votes - 1\n            }\n            props.upVoteHandle(upVotes, props.comment.id)\n        } else if (event.target.name = 'delete') {\n            props.removeComment(props.comment.id)\n        }\n    }\n\n\n    return(\n        <div>\n            <p>Comment: {props.comment.content}</p>\n            <p>Date: {props.comment.date}</p>\n            <p>Time: {props.comment.time}</p>\n            <p>Username: {props.comment.user.username}</p>\n            <p>Up-Votes: {props.comment.up_votes}</p>\n            <button name=\"up\" onClick={clickHandle}>👍</button>\n            <button name=\"down\" onClick={clickHandle}>👎</button>\n            <button name=\"delete\" onClick={clickHandle}>X</button>\n        </div>\n    )\n}\n\nconst mdp = dispatch => {\n    return {\n        upVoteHandle: (upVoteObj, commentId) => dispatch(updateCommentVote(upVoteObj, commentId)),\n        removeComment: (commentId) => dispatch(deleteComment(commentId))\n    }\n}\n\nexport default connect(null, mdp)(Comment);","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostCard.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Footer.js",["82"],"import React from 'react';\nimport styled from 'styled-components';\nimport logo from '../asset/navbar_logo.png';\nimport NavLink from 'react-router-dom';\n\nconst Footer = () => {\n    return (\n        <Container>\n            <Logo src={logo} alt='logo' />\n            <EmailContainer>\n                <h3>Interested in partnering with us?</h3>\n                <h3>Email <a href=\"info@breakupspace.com\">info@breakupspace.com</a> to get started</h3>\n                <h3>Copyright © 2020 Breakup Space. All rights reserved.</h3>\n            </EmailContainer>\n        </Container>\n    )\n}\n\nexport default Footer;\n\nconst EmailContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-top: 5%;\n    margin-left: 20%;\n    margin-bottom: 5%;\n    width: 500px;\n    font-size: 10px;\n`\n\nconst Logo = styled.img`\n  margin-top: 5%;\n  width: 10%;\n  margin-left: 10%;\n`\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-right: 25px;\n    width: 100%;\n    background-color: #EAEAEA;\n`",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":12},{"ruleId":"87","severity":1,"message":"91","line":7,"column":16,"nodeType":"89","messageId":"90","endLine":7,"endColumn":24},{"ruleId":"87","severity":1,"message":"92","line":8,"column":16,"nodeType":"89","messageId":"90","endLine":8,"endColumn":24},{"ruleId":"93","severity":1,"message":"94","line":91,"column":9,"nodeType":"95","messageId":"96","endLine":98,"endColumn":17,"fix":"97"},{"ruleId":"93","severity":1,"message":"94","line":105,"column":9,"nodeType":"95","messageId":"96","endLine":112,"endColumn":17,"fix":"98"},{"ruleId":"93","severity":1,"message":"94","line":119,"column":9,"nodeType":"95","messageId":"96","endLine":121,"endColumn":17,"fix":"99"},{"ruleId":"87","severity":1,"message":"100","line":1,"column":16,"nodeType":"89","messageId":"90","endLine":1,"endColumn":24},{"ruleId":"101","severity":1,"message":"102","line":18,"column":20,"nodeType":"103","messageId":"104","endLine":18,"endColumn":48},{"ruleId":"87","severity":1,"message":"105","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":15},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'username' is assigned a value but never used.","'password' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"108","text":"109"},{"range":"110","text":"109"},{"range":"111","text":"109"},"'useState' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'NavLink' is defined but never used.","no-global-assign","no-unsafe-negation",[2943,2945],".",[3410,3412],[3699,3701]]