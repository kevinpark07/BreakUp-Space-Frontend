[{"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/index.js":"1","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/App.js":"2","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/ScrollToTop.js":"3","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/HomePage.js":"4","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Footer.js":"5","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/About.js":"6","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/UserProfile.js":"7","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Partners.js":"8","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/ContactUs.js":"9","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/PostGallery.js":"10","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/BreakupQuizContainer.js":"11","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Redux/actions.js":"12","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Login.js":"13","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/NavBar.js":"14","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/FavoritesContainer.js":"15","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostDisplay.js":"16","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Quiz.js":"17","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostPage.js":"18","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/FavoriteCard.js":"19","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/QuestionCard.js":"20","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostCard.js":"21","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/ResultCard.js":"22","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Comment.js":"23"},{"size":3029,"mtime":1615831201114,"results":"24","hashOfConfig":"25"},{"size":2175,"mtime":1615404381806,"results":"26","hashOfConfig":"25"},{"size":358,"mtime":1614198316038,"results":"27","hashOfConfig":"25"},{"size":3616,"mtime":1614812148686,"results":"28","hashOfConfig":"25"},{"size":3314,"mtime":1614814924708,"results":"29","hashOfConfig":"25"},{"size":153,"mtime":1614198316025,"results":"30","hashOfConfig":"25"},{"size":9795,"mtime":1615831959429,"results":"31","hashOfConfig":"25"},{"size":166,"mtime":1614198316035,"results":"32","hashOfConfig":"25"},{"size":163,"mtime":1614198316029,"results":"33","hashOfConfig":"25"},{"size":1137,"mtime":1615841712106,"results":"34","hashOfConfig":"25"},{"size":3798,"mtime":1615829644365,"results":"35","hashOfConfig":"25"},{"size":5197,"mtime":1615831959423,"results":"36","hashOfConfig":"25"},{"size":2908,"mtime":1616101008466,"results":"37","hashOfConfig":"25"},{"size":1664,"mtime":1616086634525,"results":"38","hashOfConfig":"25"},{"size":963,"mtime":1614198316040,"results":"39","hashOfConfig":"25"},{"size":5100,"mtime":1616106532672,"results":"40","hashOfConfig":"25"},{"size":3678,"mtime":1615829644363,"results":"41","hashOfConfig":"25"},{"size":6002,"mtime":1616086634530,"results":"42","hashOfConfig":"25"},{"size":2330,"mtime":1614713833680,"results":"43","hashOfConfig":"25"},{"size":2951,"mtime":1614713833681,"results":"44","hashOfConfig":"25"},{"size":5127,"mtime":1616106345991,"results":"45","hashOfConfig":"25"},{"size":6014,"mtime":1616086634531,"results":"46","hashOfConfig":"25"},{"size":3236,"mtime":1616086634522,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1wlteby",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/index.js",[],["96","97"],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/App.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/ScrollToTop.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/HomePage.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Footer.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/About.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/UserProfile.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Partners.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/ContactUs.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/PostGallery.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/BreakupQuizContainer.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Redux/actions.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Login.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/NavBar.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Containers/FavoritesContainer.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostDisplay.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Quiz.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostPage.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/FavoriteCard.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/QuestionCard.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/PostCard.js",[],"/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/ResultCard.js",["98","99"],"import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport styled from 'styled-components';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport {saveFavoriteMessage} from '../Redux/actions';\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n  \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n  \n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      position: 'absolute',\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\n\nconst ResultCard = (props) => {\n    const classes = useStyles();\n\n    const [modalStyle] = useState(getModalStyle);\n    const [open, setOpen] = useState(false);\n    const [save, setSave] = useState(false);\n    const [message, setMessage] = useState(props.result.message);\n    const [editMessage, setEditMessage] = useState(false)\n\n    const handleOpen = () => {\n        setOpen(true);\n      };\n    \n      const handleClose = () => {\n        setOpen(false);\n        setSave(false);\n      };\n\n      const handleSave = () => {\n        let messageObj = {\n          user_id: props.user.id,\n          breakup_message_id: props.result.id,\n        };\n\n        props.saveFavoriteMessage(messageObj);\n        setSave(true);\n        setOpen(true);\n      }\n\n\n      const handleChange = (e) => {\n        setMessage(e.target.value);\n      }\n\n      const renderResuleHeader = () => {\n          if (!props.result.subject) {\n            return <Header>The issue is they are more a friend and it seems you want to send a {props.result.tone} text...</Header>\n          } else if (!props.result.tone) {\n            return <Header>The issue is {props.result.subject}...</Header>\n          } else if(props.result.subject === 'they made me feel uncomfortable') {\n            return <Header>The issue is they made you feel uncomfortable due to {props.result.tone}...</Header>\n          }else {\n              return <Header>The issue is {props.result.subject} and it seems you want a {props.result.tone} vibe...</Header>\n          }\n      }\n    \n    return (\n      <>\n        <HeaderContainer>\n          {renderResuleHeader()}\n          <PTag onClick={props.resetQuiz}>Try Again?</PTag>\n        </HeaderContainer>\n        <Message edit={editMessage}>\n          {editMessage ? <TextArea onChange={handleChange} value={message}/> : <p style={{padding: '2px', margin: '0px'}}>{message}</p>}\n        </Message>\n        <ButtonContainer user={props.user}>\n            {editMessage ?\n              <Button onClick={() => setEditMessage(!editMessage)}>Done Editting</Button>\n              :\n              <Button onClick={() => setEditMessage(!editMessage)}> Edit Text</Button>\n            }\n            {props.user ? <Button onClick={handleSave}>Save Text</Button> : null}  \n            <CopyButton text={message} onCopy={handleOpen}>\n                <span>Copy Text!</span>\n            </CopyButton>\n        </ButtonContainer>\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <h5 style={{color: 'white'}}>{save ? 'Saved!' : 'Copied!'}</h5>\n        </Modal>       \n        </>\n    )\n}\n\nconst msp = state => {\n    return {\n        messages: state.messages,\n        user: state.user\n    }\n}\n\nconst mdp = dispatch => {\n  return {\n    saveFavoriteMessage: (messageObj) => dispatch(saveFavoriteMessage(messageObj))\n  }\n}\n\nexport default connect(msp, mdp)(ResultCard);\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-bottom: 1.5px solid #a9a9a9;\n  margin-bottom: 20px;\n`\n\nconst PTag = styled.p`\n  margin: 0px;\n  margin-bottom: 10px;\n  font-size: 16px;\n  font-weight: bold;\n  color: #bfa0e2;\n  &:hover{\n    cursor: pointer;\n    color: #9865d0;\n  }\n`\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    justify-content: ${props => props.user ? `space-between`: `space-around`}; \n  `\n\nconst Button = styled.button`\n    white-space: nowrap;\n    width: 120px;\n    border-radius: 12px;\n    border: #bfa0e2;\n    font-weight: 600;\n    color: white;\n    background-color: #333;\n    font-size: 14px;\n    margin-top: 20px;\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nconst CopyButton = styled(CopyToClipboard)`\n    white-space: nowrap;\n    width: 120px;\n    border-radius: 12px;\n    border: #bfa0e2;\n    font-weight: 600;\n    color: white;\n    background-color: #333;\n    font-size: 14px;\n    margin-top: 20px;\n    text-align: center;\n    padding: 14px 0px;\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nconst Header = styled.h1`\n    margin-top: 5px;\n    font-weight: 600;\n    font-size: 16px;\n`\n\nconst Message = styled.div`\n  border-radius: 20px;\n  padding: 8px 15px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  display: inline-block;\n  margin-left: 25%;\n  background-attachment: fixed;\n  position: relative;\n  margin-bottom: 20px;\n  &:before{\n      content: \"\";\n      position: absolute;\n      z-index: 0;\n      bottom: 0;\n      right: -8px;\n      height: 20px;\n      width: 20px;\n      background: ${props => props.edit ? `#78ff7d`: `#bfa0e2`};\n      background-attachment: fixed;\n      border-bottom-left-radius: 15px;\n    }\n    &:after{\n      content: \"\";\n      position: absolute;\n      z-index: 1;\n      bottom: 0;\n      right: -10px;\n      width: 10px;\n      height: 20px;\n      background: #eaeaea;\n      border-bottom-left-radius: 10px;\n    }\n    ${props => props.edit ?\n      `background-color: #78ff7d`: `background-color: #bfa0e2`}\n`\n\nconst TextArea = styled.textarea`\n  border: none;\n  color: white;\n  background: #78ff7d;\n  resize: none;\n  height: 150px;\n  font-family: helvetica;\n  font-size: 16px;\n  width: 100%;\n`","/Users/HSP/Development/code/Projects/BreakUpSpace/breakup-space/src/Components/Comment.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":32,"column":11,"nodeType":"106","messageId":"107","endLine":32,"endColumn":18},{"ruleId":"104","severity":1,"message":"108","line":34,"column":12,"nodeType":"106","messageId":"107","endLine":34,"endColumn":22},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'modalStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]