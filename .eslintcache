[{"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/index.js":"1","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/App.js":"2","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/UserProfile.js":"3","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/HomePage.js":"4","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Quiz.js":"5","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Login.js":"6","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Containers/PostGallery.js":"7","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Redux/actions.js":"8","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Footer.js":"9","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/NavBar.js":"10","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Containers/FavoritesContainer.js":"11","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/PostPage.js":"12","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/PostDisplay.js":"13","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/FavoriteCard.js":"14","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Comment.js":"15","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/PostCard.js":"16","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/About.js":"17","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/ContactUs.js":"18","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Partners.js":"19"},{"size":2318,"mtime":1610661767924,"results":"20","hashOfConfig":"21"},{"size":1974,"mtime":1612994773278,"results":"22","hashOfConfig":"21"},{"size":686,"mtime":1610654936010,"results":"23","hashOfConfig":"21"},{"size":3343,"mtime":1612994092226,"results":"24","hashOfConfig":"21"},{"size":147,"mtime":1609801052083,"results":"25","hashOfConfig":"21"},{"size":1800,"mtime":1610654936003,"results":"26","hashOfConfig":"21"},{"size":959,"mtime":1610045990781,"results":"27","hashOfConfig":"21"},{"size":3826,"mtime":1610661563967,"results":"28","hashOfConfig":"21"},{"size":2772,"mtime":1613003085782,"results":"29","hashOfConfig":"21"},{"size":2671,"mtime":1612979394650,"results":"30","hashOfConfig":"21"},{"size":701,"mtime":1610654936011,"results":"31","hashOfConfig":"21"},{"size":2054,"mtime":1610661920097,"results":"32","hashOfConfig":"21"},{"size":2440,"mtime":1610658120060,"results":"33","hashOfConfig":"21"},{"size":240,"mtime":1610654936003,"results":"34","hashOfConfig":"21"},{"size":1502,"mtime":1610661346148,"results":"35","hashOfConfig":"21"},{"size":2376,"mtime":1612821894600,"results":"36","hashOfConfig":"21"},{"size":153,"mtime":1612993931789,"results":"37","hashOfConfig":"21"},{"size":163,"mtime":1612994366578,"results":"38","hashOfConfig":"21"},{"size":166,"mtime":1612994507050,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1v4h3vc",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/index.js",[],["82","83"],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/App.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/UserProfile.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/HomePage.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Quiz.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Login.js",["84","85"],"import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {loginUser} from '../Redux/actions';\nimport {Redirect} from 'react-router-dom';\n\n    const Login = (props) => {\n        const [username, setUsername] = useState('');\n        const [password, setPassword] = useState('');\n\n        const changeHandle = (event) => {\n            if (event.target.name === \"username\") {\n                setUsername(event.target.value);\n            } else if (event.target.name === \"password\") {\n                setPassword(event.target.value);\n            }\n        }\n        \n        const handleSubmit = (event) => {\n            event.preventDefault();\n            // let foundUser = props.users.find(user => user.username === username && user.password === password)\n            let foundUser = props.users[1];\n            if (foundUser) {\n                props.setUser(foundUser);\n            } else {\n             return alert('Incorrect Username or Password');\n            }\n        }\n\n        return (\n            <div>\n                {props.user ? <Redirect to='/'/>: null}\n                <h1>Log-In</h1>\n                <form onSubmit={handleSubmit} >\n                    <input type='text' name='username' placeholder='Username' onChange={changeHandle} />\n                    <br/>\n                    <input type='password' name='password' placeholder='Password' onChange={changeHandle}/>\n                    <button>Submit</button>\n                </form>\n            </div>\n        )\n    }\n\n    const msp = state => {\n        return {\n            users: state.users,\n            user: state.user\n        }\n    }\n\n    const mdp = dispatch => {\n        return {\n           setUser: (user) => dispatch(loginUser(user))\n        }\n    }\n\n\nexport default connect (msp, mdp)(Login);","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Containers/PostGallery.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Redux/actions.js",["86","87","88"],"const POSTS_URL = 'http://localhost:3000/posts/';\nconst BREAKUPMESSAGES_URL = 'http://localhost:3000/breakup_messages/';\nconst USERS_URL = 'http://localhost:3000/users/';\nconst FAVORITES_URL = 'http://localhost:3000/favorites/';\nconst COMMENTS_URL = 'http://localhost:3000/comments/';\n\nexport const fetchFavorites = () => {\n    return function (dispatch) {\n        fetch(FAVORITES_URL)\n        .then(resp => resp.json())\n        .then(favorites => dispatch({type: \"GET_FAVORITES\", payload: favorites}))\n    }\n}\n\nexport const getPosts = () => {\n    return function (dispatch) {\n        fetch(POSTS_URL)\n        .then(resp => resp.json())\n        .then(posts => dispatch({type: \"GET_POSTS\", payload: posts}))\n    }\n};\n\nexport const savePost = (postObj) => {\n    return function (dispatch) {\n        fetch(POSTS_URL, {\n            method:'POST',\n            headers: {\n                'content-type': 'application/json',\n                accepts: \"application/json\"\n            },\n            body: JSON.stringify(postObj)\n        })\n        .then(resp => resp.json())\n        .then(newPost => dispatch({type: \"NEW_POST\", payload: newPost}))\n    }\n}\n\nexport const deletePost = (postId) => {\n    return function(dispatch) {\n        fetch(POSTS_URL + postId, {\n            method: 'DELETE'\n        })\n        .then(resp => resp.json())\n        .then(deletedPost => dispatch({type: \"DELETE_POST\", payload: deletedPost}))\n    }\n}\n\nexport const updateVote = (upVote, postId) => {\n    return function (dispatch) {\n        fetch(POSTS_URL + postId, {\n            method: 'PATCH',\n            headers: {\n                'content-type': 'application/json',\n                accepts: 'application/json'\n            },\n            body: JSON.stringify(upVote)\n        })\n        .then(resp => resp.json())\n        .then(updatedPost => dispatch({type: \"UPDATED_POST\", payload: updatedPost}))\n    }\n}\n\nexport const getBreakUpMessages = () => {\n    return function (dispatch) {\n        fetch(BREAKUPMESSAGES_URL)\n        .then(resp => resp.json())\n        .then(messages => dispatch({type: \"GET_MESSAGES\", payload: messages}))\n    }\n};\n\nexport const fetchUsers = () => {\n    return function(dispatch) {\n        fetch(USERS_URL)\n        .then(resp => resp.json())\n        .then(users => dispatch({type: \"FETCH_USERS\", payload: users}))\n    }\n};\n\nexport const loginUser = user => ({type: \"SET_USER\", payload: user});\n\nexport const getComments = () => {\n    return function (dispatch) {\n        fetch(COMMENTS_URL)\n        .then(resp => resp.json())\n        .then(comments => dispatch({type: \"GET_COMMENTS\", payload: comments}))\n    }\n}\n\nexport const saveComment = (commentObj) => {\n    return function(dispatch) {\n        fetch(COMMENTS_URL, {\n            method: \"POST\",\n            headers: {\n                'content-type': 'application/json',\n                'accepts': 'application/json'\n            }, \n            body: JSON.stringify(commentObj)\n        }) .then(resp => resp.json())\n        .then(comment => dispatch({type: \"NEW_COMMENT\", payload: comment}))\n    }\n}\n\nexport const updateCommentVote = (upVoteObj, commentId) => {\n    return function(dispatch) {\n        fetch(COMMENTS_URL + commentId, {\n            method: \"PATCH\",\n            headers: {\n                'content-type': 'application/json',\n                'accepts': 'application/json'\n            },\n            body: JSON.stringify(upVoteObj)\n        }) .then(resp => resp.json())\n        .then(updatedComment => dispatch({type: \"UPDATE_COMMENT\", payload: updatedComment}))\n    }\n}\n\nexport const deleteComment = (commentId) => {\n    return function(dispatch) {\n        fetch(COMMENTS_URL + commentId, {\n            method: 'DELETE'\n        }) .then(resp => resp.json())\n        .then(deletedComment => dispatch({type:\"DELETE_COMMENT\", payload: deletedComment}))\n    }\n}","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Footer.js",["89","90","91","92","93"],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/NavBar.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Containers/FavoritesContainer.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/PostPage.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/PostDisplay.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/FavoriteCard.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Comment.js",["94","95"],"import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {updateCommentVote, deleteComment} from '../Redux/actions.js'\n\nconst Comment = props => {\n    \n    const clickHandle = event => {\n        if (event.target.name === 'up') {\n            let upVotes = {\n                up_votes: props.comment.up_votes + 1\n            }\n            props.upVoteHandle(upVotes, props.comment.id)\n        } else if (event.target.name === 'down') {\n            let upVotes = {\n                up_votes: props.comment.up_votes - 1\n            }\n            props.upVoteHandle(upVotes, props.comment.id)\n        } else if (event.target.name = 'delete') {\n            props.removeComment(props.comment.id)\n        }\n    }\n\n\n    return(\n        <div>\n            <p>Comment: {props.comment.content}</p>\n            <p>Date: {props.comment.date}</p>\n            <p>Time: {props.comment.time}</p>\n            <p>Username: {props.comment.user.username}</p>\n            <p>Up-Votes: {props.comment.up_votes}</p>\n            <button name=\"up\" onClick={clickHandle}>👍</button>\n            <button name=\"down\" onClick={clickHandle}>👎</button>\n            <button name=\"delete\" onClick={clickHandle}>X</button>\n        </div>\n    )\n}\n\nconst mdp = dispatch => {\n    return {\n        upVoteHandle: (upVoteObj, commentId) => dispatch(updateCommentVote(upVoteObj, commentId)),\n        removeComment: (commentId) => dispatch(deleteComment(commentId))\n    }\n}\n\nexport default connect(null, mdp)(Comment);","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/PostCard.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/About.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/ContactUs.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Partners.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":7,"column":16,"nodeType":"102","messageId":"103","endLine":7,"endColumn":24},{"ruleId":"100","severity":1,"message":"104","line":8,"column":16,"nodeType":"102","messageId":"103","endLine":8,"endColumn":24},{"ruleId":"105","severity":1,"message":"106","line":91,"column":9,"nodeType":"107","messageId":"108","endLine":98,"endColumn":17,"fix":"109"},{"ruleId":"105","severity":1,"message":"106","line":105,"column":9,"nodeType":"107","messageId":"108","endLine":112,"endColumn":17,"fix":"110"},{"ruleId":"105","severity":1,"message":"106","line":119,"column":9,"nodeType":"107","messageId":"108","endLine":121,"endColumn":17,"fix":"111"},{"ruleId":"100","severity":1,"message":"112","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":21},{"ruleId":"100","severity":1,"message":"113","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":12},{"ruleId":"100","severity":1,"message":"114","line":8,"column":8,"nodeType":"102","messageId":"103","endLine":8,"endColumn":21},{"ruleId":"100","severity":1,"message":"115","line":9,"column":8,"nodeType":"102","messageId":"103","endLine":9,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":45,"column":1,"nodeType":"118","messageId":"119","endLine":48,"endColumn":36},{"ruleId":"100","severity":1,"message":"120","line":1,"column":16,"nodeType":"102","messageId":"103","endLine":1,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":18,"column":20,"nodeType":"123","messageId":"124","endLine":18,"endColumn":48},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","'password' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"127","text":"128"},{"range":"129","text":"128"},{"range":"130","text":"128"},"'instagramLogo' is defined but never used.","'Icon' is defined but never used.","'InstagramIcon' is defined but never used.","'FacebookIcon' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useState' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-global-assign","no-unsafe-negation",[2943,2945],".",[3410,3412],[3699,3701]]