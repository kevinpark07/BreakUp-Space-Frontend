[{"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/index.js":"1","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/App.js":"2","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/UserProfile.js":"3","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/HomePage.js":"4","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Login.js":"5","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Containers/PostGallery.js":"6","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Redux/actions.js":"7","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Footer.js":"8","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/NavBar.js":"9","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Containers/FavoritesContainer.js":"10","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/PostPage.js":"11","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/PostDisplay.js":"12","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/FavoriteCard.js":"13","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Comment.js":"14","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/PostCard.js":"15","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/About.js":"16","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/ContactUs.js":"17","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Partners.js":"18","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Containers/BreakupQuizContainer.js":"19","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/QuestionCard.js":"20","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/ResultCard.js":"21","/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Quiz.js":"22"},{"size":2655,"mtime":1613675247595,"results":"23","hashOfConfig":"24"},{"size":2104,"mtime":1613688638157,"results":"25","hashOfConfig":"24"},{"size":8361,"mtime":1613684077966,"results":"26","hashOfConfig":"24"},{"size":3388,"mtime":1613689945763,"results":"27","hashOfConfig":"24"},{"size":1799,"mtime":1613427890422,"results":"28","hashOfConfig":"24"},{"size":959,"mtime":1610045990781,"results":"29","hashOfConfig":"24"},{"size":4572,"mtime":1613687725568,"results":"30","hashOfConfig":"24"},{"size":3493,"mtime":1613688104140,"results":"31","hashOfConfig":"24"},{"size":2671,"mtime":1613074594103,"results":"32","hashOfConfig":"24"},{"size":963,"mtime":1613687409841,"results":"33","hashOfConfig":"24"},{"size":2054,"mtime":1610661920097,"results":"34","hashOfConfig":"24"},{"size":2440,"mtime":1613073445778,"results":"35","hashOfConfig":"24"},{"size":2332,"mtime":1613679366348,"results":"36","hashOfConfig":"24"},{"size":1492,"mtime":1613687375349,"results":"37","hashOfConfig":"24"},{"size":2376,"mtime":1612821894600,"results":"38","hashOfConfig":"24"},{"size":153,"mtime":1613074594101,"results":"39","hashOfConfig":"24"},{"size":163,"mtime":1613074594101,"results":"40","hashOfConfig":"24"},{"size":166,"mtime":1613074594103,"results":"41","hashOfConfig":"24"},{"size":3863,"mtime":1613957620782,"results":"42","hashOfConfig":"24"},{"size":773,"mtime":1613953721515,"results":"43","hashOfConfig":"24"},{"size":1433,"mtime":1613953240850,"results":"44","hashOfConfig":"24"},{"size":2578,"mtime":1613952732114,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1v4h3vc",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/index.js",[],["92","93"],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/App.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/UserProfile.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/HomePage.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Login.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Containers/PostGallery.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Redux/actions.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Footer.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/NavBar.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Containers/FavoritesContainer.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/PostPage.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/PostDisplay.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/FavoriteCard.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Comment.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/PostCard.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/About.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/ContactUs.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Partners.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Containers/BreakupQuizContainer.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/QuestionCard.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/ResultCard.js",[],"/Users/Sam/Development/code/BreakupSpace/BreakUp-Space-Frontend/src/Components/Quiz.js",["94"],"import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport QuestionCard from '../Components/QuestionCard';\nimport ResultCard from '../Components/ResultCard';\n\nconst Quiz = (props) => {\n    const [count, setCount] = useState(0);\n    const [messageSubject, setMessageSubject] = useState('');\n    const [messageTone, setMessageTone] = useState({'casual': 0, 'friendly': 0, 'direct': 0});\n    \n    const resetQuiz = () => {\n        props.resetQuiz();\n        setCount(0);\n        setMessageTone({'casual': 0, 'friendly': 0, 'direct': 0});\n    }\n\n    const nextQuestion = (answer) => {\n        if(count === 0 && props.topic !== 'friendzone') {\n            setMessageSubject(answer.innerText.toLowerCase());\n            setCount(count+1)\n            renderQuestions()\n        } else if (messageSubject === 'made me feel uncomfortable' && count === 1) {\n            setMessageTone(answer.innerText.toLowerCase())\n            setCount(props.questions.length)\n            renderQuestions()  \n        } else {\n            switch(parseInt(answer.id)) {\n                case 1:\n                    setMessageTone({...messageTone, casual: messageTone['casual']+1})\n                    break;\n                case 2:\n                    setMessageTone({...messageTone, friendly: messageTone['friendly']+1})\n                    break;\n                case 3:\n                    setMessageTone({...messageTone, direct: messageTone['direct']+1})\n                    break;\n                default:\n                    break;\n            }\n            setCount(count+1)\n            renderQuestions()\n        }\n    }\n\n    const renderQuestions = () => {\n        if (messageSubject === 'just not feeling it' && count === 1) {\n            setCount(count + 1)\n            let selectedQuestion = props.questions[count];\n            return  <QuestionCard handleClick={nextQuestion} key={selectedQuestion.id} question={selectedQuestion.question} answers={selectedQuestion.answers}/>\n        } else if(count < props.questions.length) {\n            if (props.questions) {\n                let selectedQuestion = props.questions[count]\n                return  <QuestionCard handleClick={nextQuestion} key={selectedQuestion.id} question={selectedQuestion.question} answers={selectedQuestion.answers}/>\n            }\n        } else {\n            return (\n                <ResultCard resetQuiz={resetQuiz} topic={props.topic} messageTone={messageTone} messageSubject={messageSubject}/>\n            )\n        }\n    }\n\n    return (\n        renderQuestions()\n    )\n}\n\nexport default Quiz;",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":9,"nodeType":"101","messageId":"102","endLine":2,"endColumn":16},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]